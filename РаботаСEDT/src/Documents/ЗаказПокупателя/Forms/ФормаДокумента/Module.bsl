
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ++Кочетов Задача:homework11.2 05.03.2025
	ПолеКонтактногоЛица = Элементы.Добавить("ТП_КонтактноеЛицо", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	ПолеКонтактногоЛица.Вид = ВидПоляФормы.ПолеВвода;
	ПолеКонтактногоЛица.ПутьКДанным = "Объект.ТП_КонтактноеЛицо";
	ПолеКонтактногоЛица.Заголовок = "КонтактноеЛицо";
	
	НоваяГруппа = Элементы.Вставить("ГруппаСкидка", Тип("ГруппаФормы"), , Элементы.Страницы);
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	НовыйЭлемент = Элементы.Добавить("СогласованнаяСкидка", Тип("ПолеФормы"), НоваяГруппа);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "Объект.ТП_СогласованнаяСкидка";
	НовыйЭлемент.Заголовок = "Согласованная скидка";
	НовыйЭлемент.УстановитьДействие("ПриИзменении", "ПриИзмененииСогласованнойСкидки");
	
	КомандаПересчитать = Команды.Добавить("Пересчитать");
	КомандаПересчитать.Действие = "ПересчитатьТаблицы";
	КомандаПересчитать.Заголовок = "Пересчитать таблицы";
	
	НоваяКнопка = Элементы.Добавить("КнопкаПересчитать", Тип("КнопкаФормы"), НоваяГруппа);
	НоваяКнопка.ИмяКоманды = "Пересчитать";
	НоваяКнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	НоваяКнопка.Картинка = БиблиотекаКартинок.Обновить;
	НоваяКнопка.Отображение = ОтображениеКнопки.КартинкаИТекст;
	
	// --Кочетов Задача:homework11.2 05.03.2025
	
	// ++Кочетов Задача:homework12.4 31.03.2025
	ПолеСтатус = Элементы.Добавить("ТП_Статус", Тип("ПолеФормы"), Элементы.ГруппаШапкаЛево);
	ПолеСтатус.Вид = ВидПоляФормы.ПолеВвода;
	ПолеСтатус.ПутьКДанным = "Объект.ТП_Статус";
	ПолеСтатус.Заголовок = "Статус заказа";
	// --Кочетов Задача:homework12.4 31.03.2025
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)

	// ++Кочетов Задача:homework11.2 11.03.2025
	// Старый код
	// КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	
	// Новый код
	ОбщаяСкидка = ТекущиеДанные.Скидка + Объект.ТП_СогласованнаяСкидка;
	
	Если ОбщаяСкидка > 100 Тогда
		ТекущиеДанные.Сумма = 0;
		ТекстПредупреждения = СтрШаблон("Скидка на %1 превышает 100%% на %2%%", ТекущиеДанные.Номенклатура, ОбщаяСкидка - 100);
		ПредупреждениеАсинх(ТекстПредупреждения,, "Ошибка скидки");
		Возврат;
	Иначе
		СуммаСкидки = ОбщаяСкидка;
	КонецЕсли;
	
	КоэффициентСкидки = 1 - СуммаСкидки / 100;
	// --Кочетов Задача:homework11.2 11.03.2025
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриИзмененииСогласованнойСкидки()
	
	// ++Кочетов Задача:homework11.2 05.03.2025
	ТекущиеДанныеТовары = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанныеУслуги = Элементы.Услуги.ТекущиеДанные;
	
	Если ТекущиеДанныеТовары = Неопределено И ТекущиеДанныеУслуги = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтветПользователя = Ждать ВопросАсинх("Пересчитать таблицы?", РежимДиалогаВопрос.ДаНет);
	
	Если ОтветПользователя <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПересчитатьТаблицы();
	// --Кочетов Задача:homework11.2 05.03.2025	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицы()
	
	// ++Кочетов Задача:homework11.12 05.03.2025
	
	Для Каждого ТекущаяСтрока Из Объект.Товары Цикл
		ТекущаяСтрока.Скидка = 0;
		РассчитатьСуммуСтроки(ТекущаяСтрока);
		ТекущаяСтрока.Скидка = Объект.ТП_СогласованнаяСкидка;
	КонецЦикла;
	
	Для Каждого ТекущаяСтрока Из Объект.Услуги Цикл
		ТекущаяСтрока.Скидка = 0;
		РассчитатьСуммуСтроки(ТекущаяСтрока);
		ТекущаяСтрока.Скидка = Объект.ТП_СогласованнаяСкидка;
	КонецЦикла;
	
	РассчитатьСуммуДокумента();
	
	// --Кочетов Задача:homework11.12 05.03.2025
	
КонецПроцедуры


#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
